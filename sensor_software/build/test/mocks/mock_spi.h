/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_SPI_H
#define _MOCK_SPI_H

#include "unity.h"
#include "spi.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_spi_Init(void);
void mock_spi_Destroy(void);
void mock_spi_Verify(void);




#define spi_write_Ignore() spi_write_CMockIgnore()
void spi_write_CMockIgnore(void);
#define spi_write_StopIgnore() spi_write_CMockStopIgnore()
void spi_write_CMockStopIgnore(void);
#define spi_write_ExpectAnyArgs() spi_write_CMockExpectAnyArgs(__LINE__)
void spi_write_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define spi_write_Expect(blocksize, srcbuff) spi_write_CMockExpect(__LINE__, blocksize, srcbuff)
void spi_write_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t blocksize, uint16_t* srcbuff);
typedef void (* CMOCK_spi_write_CALLBACK)(uint32_t blocksize, uint16_t* srcbuff, int cmock_num_calls);
void spi_write_AddCallback(CMOCK_spi_write_CALLBACK Callback);
void spi_write_Stub(CMOCK_spi_write_CALLBACK Callback);
#define spi_write_StubWithCallback spi_write_Stub
#define spi_read_Ignore() spi_read_CMockIgnore()
void spi_read_CMockIgnore(void);
#define spi_read_StopIgnore() spi_read_CMockStopIgnore()
void spi_read_CMockStopIgnore(void);
#define spi_read_ExpectAnyArgs() spi_read_CMockExpectAnyArgs(__LINE__)
void spi_read_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define spi_read_Expect(blocksize, destbuff) spi_read_CMockExpect(__LINE__, blocksize, destbuff)
void spi_read_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t blocksize, uint16_t* destbuff);
typedef void (* CMOCK_spi_read_CALLBACK)(uint32_t blocksize, uint16_t* destbuff, int cmock_num_calls);
void spi_read_AddCallback(CMOCK_spi_read_CALLBACK Callback);
void spi_read_Stub(CMOCK_spi_read_CALLBACK Callback);
#define spi_read_StubWithCallback spi_read_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
